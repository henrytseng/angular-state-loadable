{"version":3,"sources":["state-loadable.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","angular","factory","./services/loadable-manager",2,"$state","$q","$document","$rootScope","_self","_loadableHash","_loadingList","_completedList","_Loadable","state","src","_loadable","isComplete","promise","defer","$element","createElement","_head","getElementsByTagName","documentElement","type","async","insertBefore","firstChild","push","onload","onreadystatechange","this","readyState","parentNode","removeChild","indexOf","splice","resolve","_getProgress","loaded","total","Math","min","max","_createLoadable","loadable","error","$broadcast","then","_getLoadable","create","get","progress","$use","request","next"],"mappings":"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","file":"state-loadable.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/* global angular:false */\n\n// CommonJS\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'angular-state-loadable';\n}\n\n// Assume polyfill used in StateRouter exists\n\n// Instantiate module\nangular.module('angular-state-loadable', ['angular-state-router'])\n\n  .factory('$loadableManager', require('./services/loadable-manager'));\n\n},{\"./services/loadable-manager\":2}],2:[function(require,module,exports){\n'use strict';\n\n/* global process:false */\n\nmodule.exports = ['$state', '$q', '$document', '$rootScope', function($state, $q, $document, $rootScope) {\n\n  // Instance\n  var _self = {};\n\n  // Library\n  var _loadableHash = {};\n\n  // Progress\n  var _loadingList = [];\n  var _completedList = [];\n\n  /**\n   * A loaded resource, adds self to DOM, self manage progress\n   * \n   * @return {_Loadable} An instance\n   */\n  var _Loadable = function(state, src) {\n    // Instance\n    var _loadable = {\n\n      state: state,\n\n      src: src,\n\n      // Loading completion flag\n      isComplete: false,\n\n      promise: $q.defer(),\n\n      $element: $document.createElement('script')\n\n    };\n\n    // Build DOM element\n    var _head = $document.getElementsByTagName(\"head\")[0] || $document.documentElement;\n    _loadable.$element.src = src;\n    _loadable.$element.type = 'text/javascript';\n    _loadable.$element.async = false;\n    _head.insertBefore(_loadable.$element, _head.firstChild);\n\n    // Mark loading in progress\n    _loadingList.push(_loadable);\n\n    // Completion\n    _loadable.$element.onload = _loadable.$element.onreadystatechange = function() {\n\n      if(!_loadable.isComplete && (!this.readyState || this.readyState === \"loaded\" || this.readyState === \"complete\")) {\n        _loadable.isComplete = true;\n        _loadable.$element.onload = _loadable.$element.onreadystatechange = null;\n        \n        if(_head && _loadable.$element.parentNode) {\n          _head.removeChild(_loadable.$element);\n        }\n\n        // Mark complete\n        var i = _loadingList.indexOf(_loadable);\n        if(i !== -1) {\n          _loadingList.splice(i, 1);\n        }\n        _completedList.push(_loadable);\n\n        _loadable.promise.resolve(_loadable);\n      }\n    };\n\n    return _loadable;\n  };\n\n  /**\n   * Get progress\n   * \n   * @return {Number} A number 0..1 denoting progress\n   */\n  var _getProgress = function() {\n    var loaded = _loadingList.length;\n    var total = _loadingList.length + _completedList.length;\n    return Math.min(1, Math.max(0, loaded/total));\n  };\n\n  /**\n   * Create a _Loadable.  Does not replace previously created instances.  \n   * \n   * @param  {String}  state A state name\n   * @param  {String}  src   A source path for script asset\n   * @return {_Loadable}      A loadable instance\n   */\n  var _createLoadable = function(state, src) {\n    var loadable;\n\n    // Valid state name required\n    if(!state || state === '') {\n      var error;\n      error = new Error('Loadable requires a valid state name.');\n      error.code = 'invalidname';\n      throw error;\n    }\n\n    // Already exists\n    if(_loadableHash[state]) {\n      loadable = _loadableHash[state];\n\n    // Create new\n    } else {\n      // Create new instance\n      loadable = new _Loadable(state, src);\n      _loadableHash[state] = loadable;\n\n      // Broadcast creation, progress\n      $rootScope.$broadcast('$loadableCreated', loadable);\n      $rootScope.$broadcast('$loadableProgress', _getProgress());\n\n      // Completion\n      loadable.promise.then(function() {\n\n        // Broadcast complete\n        $rootScope.$broadcast('$loadableProgress', _getProgress());\n        if(_loadingList.length === 0) {\n          $rootScope.$broadcast('$loadableComplete', loadable);\n        }\n      });\n    }\n\n    return loadable;\n  };\n\n  /**\n   * Get loadable, if does not exist create\n   * \n   * @param  {String}  state A state name\n   * @return {_Loadable}      A loadable instance\n   */\n  var _getLoadable = function(state) {\n    return _loadableHash[state];\n  };\n\n  /**\n   * Create a loadable, get reference to existing methods\n   */\n  _self.create = _createLoadable;\n\n  /**\n   * Get a loadable\n   */\n  _self.get = _getLoadable;\n\n  /**\n   * Get progress\n   * \n   * @return {Number} A number 0..1 denoting current progress\n   */\n  _self.progress = _getProgress;\n\n  // Register middleware layer\n  $state.$use(function(request, next) {\n    next();\n  });\n\n  return _self;\n}];\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvaGVucnkvSG9tZVN5bmMvQ2FudmFzL3Byb2plY3RzL2FuZ3VsYXItc3RhdGUtbG9hZGFibGUvc3JjL2luZGV4LmpzIiwiL1VzZXJzL2hlbnJ5L0hvbWVTeW5jL0NhbnZhcy9wcm9qZWN0cy9hbmd1bGFyLXN0YXRlLWxvYWRhYmxlL3NyYy9zZXJ2aWNlcy9sb2FkYWJsZS1tYW5hZ2VyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7Ozs7O0FBS0EsSUFBSSxPQUFPLFdBQVcsZUFBZSxPQUFPLFlBQVksZUFBZSxPQUFPLFlBQVksUUFBUTtFQUNoRyxPQUFPLFVBQVU7Ozs7OztBQU1uQixRQUFRLE9BQU8sMEJBQTBCLENBQUM7O0dBRXZDLFFBQVEsb0JBQW9CLFFBQVE7QUFDdkM7O0FDZkE7Ozs7QUFJQSxPQUFPLFVBQVUsQ0FBQyxVQUFVLE1BQU0sYUFBYSxjQUFjLFNBQVMsUUFBUSxJQUFJLFdBQVcsWUFBWTs7O0VBR3ZHLElBQUksUUFBUTs7O0VBR1osSUFBSSxnQkFBZ0I7OztFQUdwQixJQUFJLGVBQWU7RUFDbkIsSUFBSSxpQkFBaUI7Ozs7Ozs7RUFPckIsSUFBSSxZQUFZLFNBQVMsT0FBTyxLQUFLOztJQUVuQyxJQUFJLFlBQVk7O01BRWQsT0FBTzs7TUFFUCxLQUFLOzs7TUFHTCxZQUFZOztNQUVaLFNBQVMsR0FBRzs7TUFFWixVQUFVLFVBQVUsY0FBYzs7Ozs7SUFLcEMsSUFBSSxRQUFRLFVBQVUscUJBQXFCLFFBQVEsTUFBTSxVQUFVO0lBQ25FLFVBQVUsU0FBUyxNQUFNO0lBQ3pCLFVBQVUsU0FBUyxPQUFPO0lBQzFCLFVBQVUsU0FBUyxRQUFRO0lBQzNCLE1BQU0sYUFBYSxVQUFVLFVBQVUsTUFBTTs7O0lBRzdDLGFBQWEsS0FBSzs7O0lBR2xCLFVBQVUsU0FBUyxTQUFTLFVBQVUsU0FBUyxxQkFBcUIsV0FBVzs7TUFFN0UsR0FBRyxDQUFDLFVBQVUsZUFBZSxDQUFDLEtBQUssY0FBYyxLQUFLLGVBQWUsWUFBWSxLQUFLLGVBQWUsYUFBYTtRQUNoSCxVQUFVLGFBQWE7UUFDdkIsVUFBVSxTQUFTLFNBQVMsVUFBVSxTQUFTLHFCQUFxQjs7UUFFcEUsR0FBRyxTQUFTLFVBQVUsU0FBUyxZQUFZO1VBQ3pDLE1BQU0sWUFBWSxVQUFVOzs7O1FBSTlCLElBQUksSUFBSSxhQUFhLFFBQVE7UUFDN0IsR0FBRyxNQUFNLENBQUMsR0FBRztVQUNYLGFBQWEsT0FBTyxHQUFHOztRQUV6QixlQUFlLEtBQUs7O1FBRXBCLFVBQVUsUUFBUSxRQUFROzs7O0lBSTlCLE9BQU87Ozs7Ozs7O0VBUVQsSUFBSSxlQUFlLFdBQVc7SUFDNUIsSUFBSSxTQUFTLGFBQWE7SUFDMUIsSUFBSSxRQUFRLGFBQWEsU0FBUyxlQUFlO0lBQ2pELE9BQU8sS0FBSyxJQUFJLEdBQUcsS0FBSyxJQUFJLEdBQUcsT0FBTzs7Ozs7Ozs7OztFQVV4QyxJQUFJLGtCQUFrQixTQUFTLE9BQU8sS0FBSztJQUN6QyxJQUFJOzs7SUFHSixHQUFHLENBQUMsU0FBUyxVQUFVLElBQUk7TUFDekIsSUFBSTtNQUNKLFFBQVEsSUFBSSxNQUFNO01BQ2xCLE1BQU0sT0FBTztNQUNiLE1BQU07Ozs7SUFJUixHQUFHLGNBQWMsUUFBUTtNQUN2QixXQUFXLGNBQWM7OztXQUdwQjs7TUFFTCxXQUFXLElBQUksVUFBVSxPQUFPO01BQ2hDLGNBQWMsU0FBUzs7O01BR3ZCLFdBQVcsV0FBVyxvQkFBb0I7TUFDMUMsV0FBVyxXQUFXLHFCQUFxQjs7O01BRzNDLFNBQVMsUUFBUSxLQUFLLFdBQVc7OztRQUcvQixXQUFXLFdBQVcscUJBQXFCO1FBQzNDLEdBQUcsYUFBYSxXQUFXLEdBQUc7VUFDNUIsV0FBVyxXQUFXLHFCQUFxQjs7Ozs7SUFLakQsT0FBTzs7Ozs7Ozs7O0VBU1QsSUFBSSxlQUFlLFNBQVMsT0FBTztJQUNqQyxPQUFPLGNBQWM7Ozs7OztFQU12QixNQUFNLFNBQVM7Ozs7O0VBS2YsTUFBTSxNQUFNOzs7Ozs7O0VBT1osTUFBTSxXQUFXOzs7RUFHakIsT0FBTyxLQUFLLFNBQVMsU0FBUyxNQUFNO0lBQ2xDOzs7RUFHRixPQUFPOztBQUVUIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIid1c2Ugc3RyaWN0JztcblxuLyogZ2xvYmFsIGFuZ3VsYXI6ZmFsc2UgKi9cblxuLy8gQ29tbW9uSlNcbmlmICh0eXBlb2YgbW9kdWxlICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiICYmIG1vZHVsZS5leHBvcnRzID09PSBleHBvcnRzKXtcbiAgbW9kdWxlLmV4cG9ydHMgPSAnYW5ndWxhci1zdGF0ZS1sb2FkYWJsZSc7XG59XG5cbi8vIEFzc3VtZSBwb2x5ZmlsbCB1c2VkIGluIFN0YXRlUm91dGVyIGV4aXN0c1xuXG4vLyBJbnN0YW50aWF0ZSBtb2R1bGVcbmFuZ3VsYXIubW9kdWxlKCdhbmd1bGFyLXN0YXRlLWxvYWRhYmxlJywgWydhbmd1bGFyLXN0YXRlLXJvdXRlciddKVxuXG4gIC5mYWN0b3J5KCckbG9hZGFibGVNYW5hZ2VyJywgcmVxdWlyZSgnLi9zZXJ2aWNlcy9sb2FkYWJsZS1tYW5hZ2VyJykpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKiBnbG9iYWwgcHJvY2VzczpmYWxzZSAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFsnJHN0YXRlJywgJyRxJywgJyRkb2N1bWVudCcsICckcm9vdFNjb3BlJywgZnVuY3Rpb24oJHN0YXRlLCAkcSwgJGRvY3VtZW50LCAkcm9vdFNjb3BlKSB7XG5cbiAgLy8gSW5zdGFuY2VcbiAgdmFyIF9zZWxmID0ge307XG5cbiAgLy8gTGlicmFyeVxuICB2YXIgX2xvYWRhYmxlSGFzaCA9IHt9O1xuXG4gIC8vIFByb2dyZXNzXG4gIHZhciBfbG9hZGluZ0xpc3QgPSBbXTtcbiAgdmFyIF9jb21wbGV0ZWRMaXN0ID0gW107XG5cbiAgLyoqXG4gICAqIEEgbG9hZGVkIHJlc291cmNlLCBhZGRzIHNlbGYgdG8gRE9NLCBzZWxmIG1hbmFnZSBwcm9ncmVzc1xuICAgKiBcbiAgICogQHJldHVybiB7X0xvYWRhYmxlfSBBbiBpbnN0YW5jZVxuICAgKi9cbiAgdmFyIF9Mb2FkYWJsZSA9IGZ1bmN0aW9uKHN0YXRlLCBzcmMpIHtcbiAgICAvLyBJbnN0YW5jZVxuICAgIHZhciBfbG9hZGFibGUgPSB7XG5cbiAgICAgIHN0YXRlOiBzdGF0ZSxcblxuICAgICAgc3JjOiBzcmMsXG5cbiAgICAgIC8vIExvYWRpbmcgY29tcGxldGlvbiBmbGFnXG4gICAgICBpc0NvbXBsZXRlOiBmYWxzZSxcblxuICAgICAgcHJvbWlzZTogJHEuZGVmZXIoKSxcblxuICAgICAgJGVsZW1lbnQ6ICRkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxuXG4gICAgfTtcblxuICAgIC8vIEJ1aWxkIERPTSBlbGVtZW50XG4gICAgdmFyIF9oZWFkID0gJGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXSB8fCAkZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgIF9sb2FkYWJsZS4kZWxlbWVudC5zcmMgPSBzcmM7XG4gICAgX2xvYWRhYmxlLiRlbGVtZW50LnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JztcbiAgICBfbG9hZGFibGUuJGVsZW1lbnQuYXN5bmMgPSBmYWxzZTtcbiAgICBfaGVhZC5pbnNlcnRCZWZvcmUoX2xvYWRhYmxlLiRlbGVtZW50LCBfaGVhZC5maXJzdENoaWxkKTtcblxuICAgIC8vIE1hcmsgbG9hZGluZyBpbiBwcm9ncmVzc1xuICAgIF9sb2FkaW5nTGlzdC5wdXNoKF9sb2FkYWJsZSk7XG5cbiAgICAvLyBDb21wbGV0aW9uXG4gICAgX2xvYWRhYmxlLiRlbGVtZW50Lm9ubG9hZCA9IF9sb2FkYWJsZS4kZWxlbWVudC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcblxuICAgICAgaWYoIV9sb2FkYWJsZS5pc0NvbXBsZXRlICYmICghdGhpcy5yZWFkeVN0YXRlIHx8IHRoaXMucmVhZHlTdGF0ZSA9PT0gXCJsb2FkZWRcIiB8fCB0aGlzLnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIikpIHtcbiAgICAgICAgX2xvYWRhYmxlLmlzQ29tcGxldGUgPSB0cnVlO1xuICAgICAgICBfbG9hZGFibGUuJGVsZW1lbnQub25sb2FkID0gX2xvYWRhYmxlLiRlbGVtZW50Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7XG4gICAgICAgIFxuICAgICAgICBpZihfaGVhZCAmJiBfbG9hZGFibGUuJGVsZW1lbnQucGFyZW50Tm9kZSkge1xuICAgICAgICAgIF9oZWFkLnJlbW92ZUNoaWxkKF9sb2FkYWJsZS4kZWxlbWVudCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBNYXJrIGNvbXBsZXRlXG4gICAgICAgIHZhciBpID0gX2xvYWRpbmdMaXN0LmluZGV4T2YoX2xvYWRhYmxlKTtcbiAgICAgICAgaWYoaSAhPT0gLTEpIHtcbiAgICAgICAgICBfbG9hZGluZ0xpc3Quc3BsaWNlKGksIDEpO1xuICAgICAgICB9XG4gICAgICAgIF9jb21wbGV0ZWRMaXN0LnB1c2goX2xvYWRhYmxlKTtcblxuICAgICAgICBfbG9hZGFibGUucHJvbWlzZS5yZXNvbHZlKF9sb2FkYWJsZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiBfbG9hZGFibGU7XG4gIH07XG5cbiAgLyoqXG4gICAqIEdldCBwcm9ncmVzc1xuICAgKiBcbiAgICogQHJldHVybiB7TnVtYmVyfSBBIG51bWJlciAwLi4xIGRlbm90aW5nIHByb2dyZXNzXG4gICAqL1xuICB2YXIgX2dldFByb2dyZXNzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGxvYWRlZCA9IF9sb2FkaW5nTGlzdC5sZW5ndGg7XG4gICAgdmFyIHRvdGFsID0gX2xvYWRpbmdMaXN0Lmxlbmd0aCArIF9jb21wbGV0ZWRMaXN0Lmxlbmd0aDtcbiAgICByZXR1cm4gTWF0aC5taW4oMSwgTWF0aC5tYXgoMCwgbG9hZGVkL3RvdGFsKSk7XG4gIH07XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIF9Mb2FkYWJsZS4gIERvZXMgbm90IHJlcGxhY2UgcHJldmlvdXNseSBjcmVhdGVkIGluc3RhbmNlcy4gIFxuICAgKiBcbiAgICogQHBhcmFtICB7U3RyaW5nfSAgc3RhdGUgQSBzdGF0ZSBuYW1lXG4gICAqIEBwYXJhbSAge1N0cmluZ30gIHNyYyAgIEEgc291cmNlIHBhdGggZm9yIHNjcmlwdCBhc3NldFxuICAgKiBAcmV0dXJuIHtfTG9hZGFibGV9ICAgICAgQSBsb2FkYWJsZSBpbnN0YW5jZVxuICAgKi9cbiAgdmFyIF9jcmVhdGVMb2FkYWJsZSA9IGZ1bmN0aW9uKHN0YXRlLCBzcmMpIHtcbiAgICB2YXIgbG9hZGFibGU7XG5cbiAgICAvLyBWYWxpZCBzdGF0ZSBuYW1lIHJlcXVpcmVkXG4gICAgaWYoIXN0YXRlIHx8IHN0YXRlID09PSAnJykge1xuICAgICAgdmFyIGVycm9yO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ0xvYWRhYmxlIHJlcXVpcmVzIGEgdmFsaWQgc3RhdGUgbmFtZS4nKTtcbiAgICAgIGVycm9yLmNvZGUgPSAnaW52YWxpZG5hbWUnO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuXG4gICAgLy8gQWxyZWFkeSBleGlzdHNcbiAgICBpZihfbG9hZGFibGVIYXNoW3N0YXRlXSkge1xuICAgICAgbG9hZGFibGUgPSBfbG9hZGFibGVIYXNoW3N0YXRlXTtcblxuICAgIC8vIENyZWF0ZSBuZXdcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ3JlYXRlIG5ldyBpbnN0YW5jZVxuICAgICAgbG9hZGFibGUgPSBuZXcgX0xvYWRhYmxlKHN0YXRlLCBzcmMpO1xuICAgICAgX2xvYWRhYmxlSGFzaFtzdGF0ZV0gPSBsb2FkYWJsZTtcblxuICAgICAgLy8gQnJvYWRjYXN0IGNyZWF0aW9uLCBwcm9ncmVzc1xuICAgICAgJHJvb3RTY29wZS4kYnJvYWRjYXN0KCckbG9hZGFibGVDcmVhdGVkJywgbG9hZGFibGUpO1xuICAgICAgJHJvb3RTY29wZS4kYnJvYWRjYXN0KCckbG9hZGFibGVQcm9ncmVzcycsIF9nZXRQcm9ncmVzcygpKTtcblxuICAgICAgLy8gQ29tcGxldGlvblxuICAgICAgbG9hZGFibGUucHJvbWlzZS50aGVuKGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIC8vIEJyb2FkY2FzdCBjb21wbGV0ZVxuICAgICAgICAkcm9vdFNjb3BlLiRicm9hZGNhc3QoJyRsb2FkYWJsZVByb2dyZXNzJywgX2dldFByb2dyZXNzKCkpO1xuICAgICAgICBpZihfbG9hZGluZ0xpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgJHJvb3RTY29wZS4kYnJvYWRjYXN0KCckbG9hZGFibGVDb21wbGV0ZScsIGxvYWRhYmxlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxvYWRhYmxlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBHZXQgbG9hZGFibGUsIGlmIGRvZXMgbm90IGV4aXN0IGNyZWF0ZVxuICAgKiBcbiAgICogQHBhcmFtICB7U3RyaW5nfSAgc3RhdGUgQSBzdGF0ZSBuYW1lXG4gICAqIEByZXR1cm4ge19Mb2FkYWJsZX0gICAgICBBIGxvYWRhYmxlIGluc3RhbmNlXG4gICAqL1xuICB2YXIgX2dldExvYWRhYmxlID0gZnVuY3Rpb24oc3RhdGUpIHtcbiAgICByZXR1cm4gX2xvYWRhYmxlSGFzaFtzdGF0ZV07XG4gIH07XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIGxvYWRhYmxlLCBnZXQgcmVmZXJlbmNlIHRvIGV4aXN0aW5nIG1ldGhvZHNcbiAgICovXG4gIF9zZWxmLmNyZWF0ZSA9IF9jcmVhdGVMb2FkYWJsZTtcblxuICAvKipcbiAgICogR2V0IGEgbG9hZGFibGVcbiAgICovXG4gIF9zZWxmLmdldCA9IF9nZXRMb2FkYWJsZTtcblxuICAvKipcbiAgICogR2V0IHByb2dyZXNzXG4gICAqIFxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9IEEgbnVtYmVyIDAuLjEgZGVub3RpbmcgY3VycmVudCBwcm9ncmVzc1xuICAgKi9cbiAgX3NlbGYucHJvZ3Jlc3MgPSBfZ2V0UHJvZ3Jlc3M7XG5cbiAgLy8gUmVnaXN0ZXIgbWlkZGxld2FyZSBsYXllclxuICAkc3RhdGUuJHVzZShmdW5jdGlvbihyZXF1ZXN0LCBuZXh0KSB7XG4gICAgbmV4dCgpO1xuICB9KTtcblxuICByZXR1cm4gX3NlbGY7XG59XTtcbiJdfQ==\n"],"sourceRoot":"/source/"}